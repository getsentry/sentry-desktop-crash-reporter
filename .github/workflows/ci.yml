name: CI

on:
  push:
    branches:
      - main
      - release/**
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - release/**
  workflow_dispatch:

permissions:
  contents: read

env:
  STEP_TIMEOUT_MINUTES: 60

jobs:
  smoke_test:
    name: Smoke Test (Debug Build of Sentry.CrashReporter)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Install Dependencies
        timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT_MINUTES) }}
        uses: "./.github/steps/install_dependencies"
        with:
          target-platform: "desktop"

      # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@6fb02220983dee41ce7ae257b6f4d8f9bf5ed4ce # v2.0.0

      - name: Build Sentry.CrashReporter (Debug)
        shell: pwsh
        run: msbuild ./Sentry.CrashReporter/Sentry.CrashReporter.csproj /r

  release_build:
    strategy:
      matrix:
       include:
         - platform: 'macOS'
           agent: 'macos-latest'
           build_rid: 'osx-arm64'
         - platform: 'Linux'
           agent: 'ubuntu-latest'
           build_rid: 'linux-x64'
         - platform: 'Windows'
           agent: 'windows-latest'
           build_rid: 'win-x64'

    name: Release Build (${{ matrix.platform }})

    runs-on: ${{ matrix.agent }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Install Dependencies
        timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT_MINUTES) }}
        uses: "./.github/steps/install_dependencies"
        with:
          target-platform: "desktop"

      - name: Build Sentry.CrashReporter
        shell: pwsh
        run: dotnet publish -f net9.0-desktop -r ${{ matrix.build_rid }} ./Sentry.CrashReporter/Sentry.CrashReporter.csproj -o ./artifacts -bl:./artifacts/build.binlog

      - name: Upload Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: release-${{ matrix.platform }}
          include-hidden-files: true
          path: ./artifacts

  unit_test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Install Dependencies
        timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT_MINUTES) }}
        uses: "./.github/steps/install_dependencies"
        with:
          target-platform: "desktop"

      - name: Build Sentry.CrashReporter.Tests (Release)
        shell: pwsh
        run: dotnet build ./Sentry.CrashReporter.Tests/Sentry.CrashReporter.Tests.csproj /p:Configuration=Release /p:OverrideTargetFramework=net9.0

      - name: Run Unit Tests
        shell: pwsh
        run: dotnet test ./Sentry.CrashReporter.Tests/Sentry.CrashReporter.Tests.csproj --no-build -c Release --logger GitHubActions --blame-crash --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.SingleHit=true

      - name: Upload code coverage
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  integration_test:
    name: Integration Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install Dependencies
        timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT_MINUTES) }}
        uses: "./.github/steps/install_dependencies"
        with:
          target-platform: "desktop"

      - name: Run Integration Tests
        run: pwsh ./scripts/integration.Tests.ps1
